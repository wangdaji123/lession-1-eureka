# 上下文初始化加载
info:
  name: Eureka server
  contact: 动脑科技VIP

spring:
  profiles:
    active: dev
---
spring:
  profiles: dev
server:
  port: 8761
eureka:
  client:
    # 是否注册到eurekaserver
    registerWithEureka: true
    # 是否拉取信息
    fetchRegistry: false
    # eureka server地址
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka/
  server:
    waitTimeInMsWhenSyncEmpty: 0
    # false 关闭自我保护，不管如何都要剔除心跳检测异常的服务
    enableSelfPreservation: true
    # updatePeerEurekaNodes执行间隔
    peerEurekaNodesUpdateIntervalMs: 10000000
  instance:
    hostname: eureka1
---
spring:
  profiles: eureka1
server:
  port: 8761
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka1:8761/eureka/,http://eureka2:8762/eureka/,http://eureka3:8763/eureka/
  server:
    waitTimeInMsWhenSyncEmpty: 0
  instance:
    hostname: eureka1
    metadataMap: 
      instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}

---
spring:
  profiles: eureka2
server:
  port: 8762
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka1:8761/eureka/,http://eureka2:8762/eureka/,http://eureka3:8763/eureka/
  server:
    waitTimeInMsWhenSyncEmpty: 0
  instance:
    hostname: eureka2
    metadataMap: 
      instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}


---
spring:
  profiles: eureka3
server:
  port: 8763
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka1:8761/eureka/,http://eureka2:8762/eureka/,http://eureka3:8763/eureka/
  server:
    waitTimeInMsWhenSyncEmpty: 0
  instance:
    hostname: eureka3
    metadataMap: 
      instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
